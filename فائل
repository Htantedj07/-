# Compiled By Mr Mafia | Muhammad Muzammil
# Github  :  https://github.com/Muzammil-404

import base64
exec(base64.b64decode("IyBDb21waWxlZCBCeSBNciBNYWZpYSB8IE11aGFtbWFkIE11emFtbWlsCiMgR2l0aHViICA6ICBodHRwczovL2dpdGh1Yi5jb20vTXV6YW1taWwtNDA0CgppbXBvcnQgYmFzZTY0CmV4ZWMoYmFzZTY0LmI2NGRlY29kZSgiSXlCRGIyMXdhV3hsWkNCQ2VTQk5jaUJOWVdacFlTQjhJRTExYUdGdGJXRmtJRTExZW1GdGJXbHNDaU1nUjJsMGFIVmlJQ0E2SUNCb2RIUndjem92TDJkcGRHaDFZaTVqYjIwdlRYVjZZVzF0YVd3dE5EQTBDZ3BwYlhCdmNuUWdZbUZ6WlRZMENtVjRaV01vWW1GelpUWTBMbUkyTkdSbFkyOWtaU2dpU1hsQ1JHSXlNWGRoVjNoc1drTkNRMlZUUWs1amFVSk9XVmRhY0ZsVFFqaEpSVEV4WVVkR2RHSlhSbXRKUlRFeFpXMUdkR0pYYkhORGFVMW5VakpzTUdGSVZtbEpRMEUyU1VOQ2IyUklVbmRqZW05MlRESmtjR1JIYURGWmFUVnFZakl3ZGxSWVZqWlpWekYwWVZkM2RFNUVRVEJEWjNCd1lsaENkbU51VVdkWmJVWjZXbFJaTUVOdFZqUmFWMDF2V1cxR2VscFVXVEJNYlVreVRrZFNiRmt5T1d0YVUyZHBVMWhzUTFKSFNYbE5XR1JvVmpOb2MxZHJUa05STWxaVVVXczFhbUZWU2s5WFZtUmhZMFpzVkZGcWFFcFNWRVY0V1ZWa1IyUkhTbGhTYlhSS1VsUkZlRnBYTVVka1IwcFlZa2hPUkdGVk1XNVZha3B6VFVkR1NWWnRiRXBSTUVVeVUxVk9RMkl5VWtsVmJtUnFaVzA1TWxSRVNtdGpSMUpJWVVSR1dtRlVWbkZaYWtsM1pHeFNXVlpxV2xwV2VrWXdXVlprTTJSRk5VVlJWRUpFV2pOQ2QxbHNhRU5rYlU1MVZWZGtXbUpWV2paWGJGSmFUVVZPZEZacVVtRldNREYyVjFjeFIyVnNjRlZYVkVKTllsVnJlVlJyWkZOaVJtdDVUMWQwWVZVeVpIQlZNV2h6VVRGS1NGTlliRTVYUjFKdlZtcE9iMk14WkhKVWEwNVNUV3hhVlZWWGN6RmhiVVpXVTJzNVdGWnRVbWhaTUZwelZrWkdjV0ZGY0ZOV1JWWTBWMVpXYTFJeVVraFRiR2hUWWxoU1MxVnNVa1psUm5CWVRWVmthMUl3Y0ZsWmEyaFBVa2RHVmsxWE5WWmhhM0I2VkZWa1IxTldXblJpUlhCU1RVVlZlVlV4Vms5Uk1rbDVWV3RzVm1KdFVuRmFWekExVFd4U1JWTnRkR3BTTVVwSldWVlNSMWR0UmxWV2JrWmFZV3RzTTFwSGVGTlhWbHB4VjJ4d1YyVnJXWGRYVmxwclRUSlNSazVWVmxKV1JVcEZWMnBPUTJReGJITmhSVTVyWWxVMU1WWldaR3RYYlVwV1YycGFXR0pHU21GVVZWWlBaRVphY1ZWdFJsZE5SRVl5VmpGamVGSXlWbk5qUmxaWVZrVktUbGxzVm5KbFZsSnlXa1pPYVZKdGREVlVNV1F3V1ZaVmVWcElRbGROYWtGNFZYcEtVMlJHVG5OVmJFcHBWa1ZhZDFaWGNFTlpWVFZ6WWtac2FWSlZOWEZWYWtKM1YyeFdXRTVYUm1oaVZYQjZWVzB3TVZadFNsVlNWRUphVmxkU1QxcFdaRTVsYkZKeVkwWlNVMWRGU2paV01WSkhZakZaZVZOcmFGVlhTRUpYVmpCVk1WTXhWWGRXYm1ScVRWZDRNRlJXV2s5aFZrbDNUbGh3VlUxV1NrUlhWbHBoVG14S2NWUnNjR2hOYkVwSlZrWldZV1F4V2toVldHeGhVak5DY0ZadGVIZGxWbVJYVjIwNVZFMXJjRWhaVkU1M1ZteGtSazVWZEZaTlJuQm9WR3hhYzJOc1pGVldiV3hYVFVkM01sWlVSbFpOVmtwSVUyeG9iRkpGU21GVVZXUk9UVlp3VjFwR1RsTlNhMW94V1d0a1IxZEdTbGRpUkZKWFRXNW9kbFpFUVhoVFJsSnhWR3MxVTFkR1NuWldiVFYzVWpBd2VHSklSbFZoTTFKUFZXeGtORk5zV2xoT1ZVNW9WbXhzTkZadGN6VlZhekYwVkdwT1ZtVnJXbnBXTVZwSFpGWndSbU5HVGxOU1ZYQXhWbXhqZDJWRk5VaFNhMmhWVjBkNGNWUlhjSE5YYkZKWFZXNU9UbFp0VWxoWFZFNXZZVlpLZEZwRVVsVk5SMmhFVld4YVYxZEZPVlpQVmtwT1lXdGFNbGRYZEdGak1XUkhWbTVTYkZJelFuQlpXSEJIWkZaYVZsZHJPVkpOUkZJelZsZDRTMkZWTVhSVmEzUldWa1ZLU0ZsdGVFOWpWa1p5VDFkMGFWWllRWGRXUjNoclRrWmtjazFJYUZSaWJWSmhXVmQwY21ReGJIUmplbFpxVW10YVdWUnNaRzlVYlVwSFkwaHdXRlpGU2s5YVZXUkhVMFpPY21GSGJGTlNXRUp2Vm14U1MxUXlWbk5UYTJSVFlteHdhRlJWWkRSU1ZsWlhXa2QwVkUxRVJrZFViR00xVjBaYVJtTklXbHBoTVZrd1ZtMTRVMlJXWkhSaVIyeHBVbGM0ZUZZeFpIZFRNREI1VTI1S1VGZEZTbE5XYm5CWFkwWmFjVkZzY0U1U2JFcElWMnRXYTJGWFNrbFJiRnBWVmxkb2NsVjZTbGRYVm5CR1QxWktUbUpZYUVSV01uQkRZekZLUjFKc2FFOVdiVkpaVld4V2QwMVdaRlZUV0doVFRXdFdORmt3V2xOVWJGcFpVVzVDV21KWVRYaFpla1pyVmxaU2MxcEhlRmRpYTBwV1ZrWmFZVlF4YkZkYVJWcFlWMGRvV1ZsclpHOVZSbEpXV2tVNVQxWnRkekpXTW5SM1ZXc3hjazVFUWxaTmFsWjZWRlJHVTJOc1VuVlJiRXBYVFd4S1RGWldVa05TTWxKWFYyNU9hRkpVYkhCVmFrRXhaREZTVjFacmRGcFdWRVo2VmpKd1IxbFdTbFpPV0VaVllsaFNlbFZyV25kU2F6VllZa1UxVGsxRmIzcFdNV1F3WVRBMVNGSnJXbXhTUm5CWVZqQmFZVlF4VmxWUmEyUnJZa2Q0V0ZZeWRFOWhWVEZ5WWtSV1ZXSkhVVEJXUjNoaFVqRktkV05HVmxoVFJVa3lWakp3UjFsV1dsaFVXR3hoVW10d1QxWnNWbmRYUmxWNFZtMTBhazFXV2xsVmJYUnZWVVprUjFkdGFGZFdSVXBNVmxaYVlWZFhTa1pUYlhoVFZrWmFXVlpFUW05aE1VNXpVMWh3YUZOSFVtRldhMVozVmpGa2NWSnNUbGhTYTNBd1dUQldkMVV4V2tobFJscFdUVlphYUZsdE1VOVNiVXBHVjJ4T2FXSldTbmhXVjNCUFlqSk5lRmR1UmxSaVIxSnZWbTF6ZUU1V2JISlZhMDVWVmpGYWVsbHJVazlXVmxsNVl6TmtZVlpXV1RCWk1WcGhWMVp3Um1OR1NrNWlWMmhQVm14U1ExbFdWWGhWYms1V1lURktjbFJYTVZOalJsWnhVMnBTYkZadFVucFdSM1JQVmtaS2RWRnNiRmRTZWxaTVdWWmtWMWRIVWtoT1ZtUnBWa1ZhV1Zkc1dtdFViVlpZVTJ0c1dHSlhlRzlXYTJSdVRVWmFSMVpyTlU1U01VWXpXV3RXWVZSc1pFZGpSMFphWWtkUk1GcFhlR3RqTVZKVlZXMTRVMVpIZUZoV1YzaHZaREZSZUZOclpHbFNlbFpZVm10V2QxTkdiSE5YYms1WVZtczFNVlZYYzNoaVIwcElaRE53VjFKdFVubFVWV1JYVW0xT1JWWnRkRTVTUmxwR1YxWmFWMUl5U25OVWJGcFZZVEJ3Y0ZsclZtRlhWbHBJVFZoa1dsWnRVa2RWTVdoclZrZEtkVkZxU2xoaGEwb3lXbGQ0VjJSSFZraGxSbEpUWVRGc05WWXhXbGRpTVZWNVZXdG9WR0V4U25OVmFrcHZZMVpWZDFacmRHeGlSM2hZVjJ0Vk5XRkdTWGhUYTJ4YVlUSm9hRmxXWkVkV1YwWTJVV3h3VjFZeWFGVlhhMVpyVXpGS1NGVnJWbFppVjNoWVZGUktVMDVzV1hoWGJUbFNUV3hHTlZVeWRHOWhWa2w2VVcxR1YwMUdjRXhhUkVaelkxWk9WVkZ0ZEdsV2JIQktWa1phYjFReFZrWk5TR1JYVmtaYVZsWnNWWGRrTVZKelZtcFNWRkl3Y0VwV1YzaDNWakF4YzFOdWNGZFNWa3BRV1ZSS1MxSXlTa2xXYkVwWVVsUldkbFp0TlhkU01rbDRXa2hHVkdKR2NISlphMlEwVjJ4V1dFNVdaRnBXTVZwYVYydG9iMVpXVGtobFJFcFZZV3R3VUZac1ZYaFRWbkJHVFZkb2FWWXhTWGhXYTFaWFVtMVJlRlJZWkdsU1ZrcFRWbXBLVTFNeFZsVlRiRTVTVFZkU1ZsVXljelZoVmtsM1RsVndWMVp0YUZSV1ZFWmhUbXhhZFZKc2NHaGhNMEpWVjFSQ2ExTXlVa2RoTTJ4UFZtdEtiMVpzVm1GTlZsbDVZMFU1YTAxck5VbFdSM1JUWVRBeGRGVnRhRlpoYTFwb1drVmFjMk5zY0VaYVJUVlRZbXRLVmxZeFVrOVVNVXBYVm14b1VGWjZWbFZXYkZVeFVURmtjVkZ1V210TlZYQXdXVEJhZDFSdFNrZGlNM0JZWVRGYVQxcFZXbE5XTWtwSFlVVTVWMlZzV25sV2JYQkRXVmRTVjFwSVRsVmlXRUpRV1ZSS05GSldaSEphUkZKb1ZqQmFWbFZ0ZUd0V01XUklaSHBDV21FeVVreFpNV1JUVTFkR1IxSnNaRk5XVm13MFZtdFNSMVF3TlVoVGJHaFZZbXRhY2xVd1pHOVZiRnB5Vm10a1RsWnNSak5XUnpGM1lXc3hSMU5zVGxwaGEzQnlWVEo0Um1ReFNuUk9WbEpvWVhwV1RWZFhkR0ZrTWxKSFYyNVdhVkl3V2xsVmJHUTBUVlphUlZOdVRsSmlWWEF3Vmxab2QxbFdTa1pPVlRWYVlrZFNWRlJYZUhOalZrNTBaRWR3VGxkRlNsWldSM2hyWkRKR1ZrMVlSbEppYkZwVVZXMTBZVTB4VVhoV2JFNVdZbFZzTTFSc1ZsTlpWMVp5VTJzeFYwMXVVbkpXYWtwTFZtMUtSbUpHVm1sWFIyaDNWMWQ0WVZNeVNsZGlTRTVoVW0xU2MxbHNWWGhPVmxaMFRVUkdXbFp0VWtkVVZtaGhWa1V4VjFOcVNsZFNNMUpRV1RCYVIxZEdjRVpqUmtwT1VsZDNNbFl4V21GaU1WVjVVMWhrYVZKWGFGRldNR1JUWVVaYWRXTkdUbXRpUlRWNFZUSXdOV0ZXU1hoVGEzQlhWbnBGTUZsWE1VdGphekZWVW0xR1UxWXlhREpXUmxaWFpEQTFXRlZZYkdGU1dGSlBWRlZrTkUxV1ZqWlNhemxTVFd0YVNWWkhjRmRWYlVwVlVtMDVWMkZyTlhaWmVrWlNaVlpyZWxwR1VrNVNNMmhHVmxaYWEyRXhUbk5TV0dSVFlsUldWVlpzVlRGU1JuQkZVbTVPV0Zac1NqRlpNR1F3VkcxR2RHUjZSbGROYmxKUVZWZHpOVlp0U2taaFJtaHBZVEJ3ZDFaWGNFZFdNREZYWVROc1RsWnRVbTlWYlRWRFVsWmtjVlJyVGxWV01IQjVWR3RvYTFkck1YRlNibkJoVWtWSmQxVnJaRVprTURWV1ZXMUdiR0V3Y0U1V1ZFWlhWREZHYzJJelpHbFNWMmhZV1cxNFlXTnNWbkZTYlVaUFZtMVNlbGRyV2s5WlYwcFdUbFZzVm1KVVZqTlpWM04zWlZaV2NWTnNjRTVoYTFwVVZqSndSMUV4V2tkU2JsWmhVbTVDV1ZWc1VsWk5iR1J5Vld0d1QxWXhXbGhaTUZaTFZHeEtXVlZyV2xkV2JVMHhXVzE0VDFac1VuSlRiVVpPWVRGd1dsWnFSbXRoTVd4WFYycGFWMWRIVWxsWmEyUnZWRVpzY2xkdVpGTk5SR3hhVjJ0YWQxZEdTbFZXVkVwWVlURktTMVJzWkZkV01rNUdWV3hLVjAxdGFGTldiRkpEVXpBd2VGcEdaR2hTVkd4eldXeGFSMDVXVVhoaFNFNWFWbXR3U1ZReFZUVlZhekYwWlVWT1dHRnJTbnBWYTFwSFYwWndSbU5HU2s1U1ZuQXhWakZTUTJJeFRYbFVhMmhVWW14YVYxWnVjSE5VUms0MlVXcENhRTFyV25sV01XaHJXVmRXZEdGRmVGUmxhMXBZV2taYVJtUXhUbkprUm5CcFZrVmFVVmRyWTNoVU1sSlhWRzVTYkZKdVFrOVVWbFpoWkZaYWMxWnRkRk5OYkZvd1ZrWm9kMWxXVGtkalNFWmFZa1p3U0ZsdGVGZFdWazVWVm0xMFYwMVZjRXBXVnpCNFpESkZlRkpZWkZSaE1WcGhWbXhrVTFOR2NFZFhibVJVVm14d1dWUnNWalJXYkZwR1Uyc3hWazFXV2xCVlYzaDJaREpLUmxWc1NsZE5iRXBNVmxaU1ExTXdOWE5qUm1Sb1VsUldjbFp0TlVOWGJHeFdZVVZPYUUxVlZqVlhhMmhyVlRGS2NsZHFTbGRTTTFKUVdUQmFSMWRHY0VaalJrcE9VbGM1TTFZeFpEUmhiVkY0WWpOb1VtSkdTbE5aYlRFMFlVWlpkMVpzY0d4U2JWSjZXVlZWTlZSc1NYZE9SRVpWWWtkTmVGZFdXbXRTTVVwMVYyeFNhR0V6UWpKV1JsWnJWVEZPVjFKdVZtcFNhMHB2Vm10a2JtVldaRlZSYlhSVFRXeGFNRlpYZEc5V01rcFlaVWM1VjJKdVFsUlVWbHByVmxaT1ZWWnRkRk5YUjFFeVZsUkplR0l5UlhsV2JGWnBVbXR3VjFadGVFdFRSbEpXVjI1T2ExWXdWalpaVlZVeFZXc3hjazVVVGxkU1YwMTRWbFJLUzFOR1duSmlSbHBZVW14d2VGWkdVa2RUTURWWFlrWmthRkpWY0hCVVZXaFRWVEZTVmxacVFsTldiRnBaVkRGak1WWkdXbFpPVlU1WVlXdHdTRll3V210WFJuQklZa1prYkdFeGJETldWRVpYWVdzeFdGVnVVbFpoTVVwVFdXMTBTMk5HYkZkV2EzUk9UVmRTV0ZsVlZUVmlSMHBYVW1wV1ZVMVhhSHBYVmxwTFUwVTVWazlXU2s1aVdHaEVWakp3UTJNeFNrZFNiR2hoVWxoQ1UxUlZWbUZrVm1SVlVXMDVWRTFyTlVsVk1qVlhWbXhhTm1KRmVGUmxhMGwzV1ZSS1IyTnNaRmxhUjBac1lsZG9UVlV6Y0VkV01sSlhVbGhrVkdFelVtRlpiRkpIVlVad1NFMVZPV3RXYXpVd1dsVmFkMVJyTVZaWGJsWlhZa1phY2xWcVNsZGtSbEpaWTBkR1ZGSnVRbmhYVjNoaFVqSktjMVpzVmxSV1JscHlWbXBHUzFOV1ZuUk5XR1JvVFZWV00xVXlkRmRYYkZwWVZXdG9ZVkpzY0ROVk1WcGhWMFUxVm1WR1dsZFNWWEJPVmxSR1YxUXhSbk5pTTJScFVsWktVMVpxU2xOVE1WWlZVV3QwVDJKSVFsaFpWVlV4WVRGYWRWRnNjRnBXVjJoRVdWUkdSbVZXY0VsYVJrNVRZVEZ2ZVZaclpEQlVNazV6VW01U2FGSXpRbFZWYkZaYVpVWmtWVk5ZWkU5V1ZFWlpWbGQwYjFZeFdqWmlSWGhoVm14S2RscEdXazVsUmtwWldrWlNUbGRGU2twV2JUQjNaVVpPYzFOWWJHeFNSVnBaV1ZSS1UxZEdVbkpXYWtKVFVqQlpNbFl5ZEZkV2JGbzJZa2hXVmsxV1dsQlZWM2gyWlZaU2RWVnNaR2hoTUhCNVZtcENWMlF3TVZkVWJGcFZZbGhDY0ZsVVRrSk5iSEJGVTIwNVZrMVZjRlpaYTFaWFZqSkZlR05JY0ZkV2JIQk1WbXRhUjJSRk9WaGtSazVzWVRGdk1sWnNWbXRoYlZGNFZGaG9VbUV5YUc5VmExWkxZMFphY1ZSdGRHbGlSM2g1VjJ0V2EyRXhXblZSVkVwVlZsZFNlbGRXV21GT2JGWjFVV3hhVTAxck5IcFdXSEJIVVRGT1NGSnJhR3hTYmtKWVZGWldWMlZXVm5KWGEyUnJZa2M1TTFsclZsZGlSazVIVTIxb1YwMUdjRXhaYWtaUFZteHdSazlYYkU1V00yaGhWbFJKTVdReGJGZGFSV1JUVmtaYVZWWnVjRmRYUmxKV1YyNWthbEpVUmtaV1YzUjNZVWRHYzFOc1FsWldSWEI2VlZkNGRtVkdSbkpoUlRWWFRUSm9lVlpYY0VOV01rcHpZa2hTVGxaWFVuSlZiVFZEVm14U1ZscElUbWhOYTNCWldsVm9UMWxXU2taT1ZWSmhVbnBHVUZwR1dsZFhSMHBHWTBaT1RsSkdWalZXTVdOM1RWWlZlVk5yYUZSaWJGcFhWbXRrTkZNeGJIUk5WazVyVFZkU2VWbFZXazloVlRGV1UyeHNWMVo2UlRCWlZFcExWMGRXU1ZKc2FHbFNWRVV3VmtaU1MxSXhaRWRXYmtaU1lsZG9VMVJVU2xOa1ZtUlhWMjF3VGxZd05VbFdWM1J2WVZaSmVXRklRbFpYU0VKSVZHMTRhMVpXVG5KYVIzQk9WMFZLVjFaR1ZtOWlNVkpZVW01S1UySnJTbGRWYWtwUFRURldObEZ1VGxOU2ExcFdXVlZrTUZVd01YVmFSRTVZVmpOU2NsWnRkSHBsVmxaWllrWmthVll6YUhoV1JtTjRUVEpSZUZwSVRsVmhNRFZ5V1d4YVIwNVdVbkpWYlRsVlZsUkNORlV5Tld0WlZrcFlWVlJDV21FeGNFUlpiWE40VW0xU1JtTkdTazVTVmxWM1ZqRmtNR0V5VFhsVmJHaFRZV3hhVTFsc1VuTmpWbXh6VjIxR2ExSnNXa2hXUjNRd1lWVXhjMU5yY0ZkV2VsWnlXVmN4VjJSRk9WVlRiRlpUVWxoQ1VWZFdVa3RUTWs1R1RsWnNVMkpZUWs5WmExWjNaV3hrV0dSSGRHcE5SRVl3VmtjMVExUXhaRWRYYldoWFRVWndTRlJYZUhOa1JUVldWRzEwVTFkSFVURldWRWt4V1ZkR1ZrMUlhRlJoYkhCb1ZXeGtiMVJHYkZaYVJUbFRZa1ZhVmxWdGMzaGhSMFYzVjFob1YxSnRVbmxVYkdSR1pWWktjMkpHVm1oaE1IQlBWa1prZWsxVk5YTmhNM0JvWld4YWIxWnFRbk5PVmxGNFZXdE9hR0Y2UWpSVk1uQlhWMFphZEdGRlRtRlNiVkpNVmpCa1MxTldXbkpOVjJ4WFZrWlZlVll4VWs5ak1VNXpZak5zVldKc1NsaFpiWE14Vld4YVZWRnVaRTlpU0VKSFdWVm9UMkZyTVZsUmJIQlhVbnBCTVZkV1dscGxSbVJaV2taU1YwMXFhRE5XYTJRd1ZESk9SMUpzYUdGU2ExcFZWV3hTVTAweFpITlhiWFJQVWpCd1NGVlhNREZVYkVwWlZXdDBWbFpGU2toWmJYaFBWbXh3Um1SSGRHbFRSVXBMVjFkMFUyRXhTbGRXYkdoUVZucFdWVlpzVlRGUk1XUnhVVzVPVTFKcldqQlphMXAzVmpBeFJWWnFWbGROYmtKUVZYcEtVMlJHVm5OaFJUbFhUVEZLVDFadGNFSk5WVEZ6WWtoS1dtVnNXbk5XYkZKelpERldXRTFZWkdsU2JHd3pWakp3UjFaVk1IbFVhazVXWld0S2VsVnJXa2RYUm5CR1kwWlNVMUpWY0ZGV1ZsSkxZekZHYzJJelpHbFNWa3BUVmpCYVlWbFdVbGhqU0U1T1ZtNUNSMWRyVm10aGJFbDNZMFJDVjJKVVZucFphMlJUVG14R2NtVkdVbGRXVkZaRVZqSndRMk14U2tkU2JHaGhVako0V0ZSVlduSmtNVnBHVjIwNWFFMXJOVWhaTUZaelZtMUtWV0pHUmxwV2JGcEhXbFZhVTFac1ZuSlViWFJPWWtad1IxZFljRUpOVmtwSVVteGFVMkpVVmxWV2JGVXhVVEZrY1ZGdVRsUlNhelV3V1ZWYWQxUnRTbk5UYWtaWVZrVnNNMVJzVlhoWFJrNTFWV3hhV0ZKcmNHaFdSbVIzWXpKV2MySklSbFZoTTBKUVdWUktORk5zVmxoT1ZVNW9WakJ3V2xaR1VrOVZNVXB5VjJwS1dHRnJTbnBWYTFwSFYwWndSbU5HU2s1U1dFSXpWakZrZDFReFRYbFNXR2hxVW0xNFZWWXdXa3RqVm14elZtMUdhbUpIZUZoWlZWcHJZa2RHTm1KSVpGWldiV2gyVmtkNFQxSnNUbFZSYkZaT1RXczBlbFpZY0VOak1VcEhVbXhvWVZKWVFsTlVWVlpoWkZaa1ZWRnRkRk5OYTFZMFdUQldiMkZXVGtkWGJXaGhWbnBCTVZsdGVGTlhSMDVHVkcxMFRtSkdjRWRYV0hCQ1RWWktTRkpzV2xOaVZGWlZWbXhWTVZFeFpIRlJiazVVVW1zMU1WWXlNVFJWYlZaeVYxUktXRlpzV25KVmFrcEdaVlpPV1dOR2NHeGlTRUpNVmxkMFYxSXlTbk5WYkZwVllUQndjMVZzVWtkVGJGWllZMFpPVkdKRk5VZFpNR2hYVjBaYU5sSnJaRnBoYTBZMFZXdGtVbVZXY0VaT1ZrcE9UV3hLTVZacldsZFVNREI0WWpOa1RsWldTbEJWTUdSdlZGWmFjbUZGT1ZWTlZWWTFXV3RXUzFsVk1VaGxSVlpXVm0xU2NsVXllRXRPYkVwMFQxWndUbUZyV25sWFZFSnJVekpPV0ZOWWJHRlNWRlpUVkZWV2QyUnNaSEpYYlRsV1RXeEtlVlF4VWs5VWJFcFpWV3QwVmxaRlNraFpiWGhQVm14U2NsTnRSazVoTTBKYVZsY3dNV014YkZaTldGSnNVa1ZhVmxWdE1XOVdSbkJJVFZVNVUxWXdiRFZYYTFVeFlVZEZkMkl6Y0ZoaVJscFVXbGQ0VTJOc1VuVlJiRXBYVFd4S1RGWldVa05UYXpWWFUydGtVMkpzY0doVVZXUTBVbFpXVjFwSGRGVldNSEJaV1ZWb1QxZEdXblJWYkZKYVlUSlNVRnBHWkU1a01EVldWVzFvVjFaV2NERldWRVpYVkRGR2MySXpaR2xTVjNoWFdXeG9iMk14VlhkWGEyUk9VbTFTV0ZkclVsTmhiRXAwVDFSV1ZXRXhTbWhWTW5oS1pEQTFXVlJzY0dsV1JscFZWMWQwYTFReVRsaFVXR1JQVmxaS2IxWnNWbUZrVmxWNFZtczVVbUpIT1ROWmExWnpWVzFLV0dGSGFGWmhhMXBNV2tSR2MyUkZNVmhqUjNSVFlsaG5kMVpFUmxOUk1rVjRVMnBhYVZKRlNsWlVWekUwVVRGd1YxWllhRlJXYTFwNFZsZDRRMkV5Vm5KVGF6RldUVlphVUZWWGVIWmtNa3BHWWtVMVUxWkdXa1pYVmxwWFVqSktjMVJzV2xWaE1IQnlWbTB4TkUxV1dsaE9WbVJWVm0xU1IxUnJhRzlYUmxvMlVXcFNXazFIVWxSVk1XUk9aREExVmxWdGFGZFdWbkF4VmxSR1YxUXhSbk5pTTJScFVsZDRhRlV3Vmt0aFJsVjNWMnQwYTJKR1JqVlphMVpMWWtaS1ZWSnJXbFpXYlZFd1ZsVmtVMDVzUm5KbFJsSlhWbFJXUkZZeWNFTmpNVXBIVW14b1lWSXllRmhVVlZwMlRWWlplV05GZEdwTmJFcFhXbFZhYzFadFNuTmpTRVpXWVRKTk1WbHRlRk5XTVZaeVZHMTBUbUpHY0VkWFdIQkNUVlpLU0ZKc1dsTmlWRlpWVm14Vk1WSkdVWGhXYkU1V1lsVnNOVmRyVm5kVmF6RkdWMjVXVjFKWFRqUlhWbVJUWkVaT1dXTkdXbWxYUjJoNFYxY3dNVlF4VVhoU1dHeHBVbFZ3YUZSVlpEUlNWbFpYV2tkMFZHSkZOVWhWTWpWUFdWWmFXR0ZHVG1GU1ZuQjZWakJrVjFOV1JuUlNhelZvWWtWV05WWlVSbGRoTVZGNVUydG9WR0pzV2xkWmJHaHZZMVpzV0U1Vk9WVk5WVlkxV1d0V1MxbFZNVWhsUlZaV1ZtMVNjbFV5ZUV0T2JFcDBUMVp3VG1GcldubFhWRUpyVXpKT1JrMVdWbEppVjNoUFZGVldWbVZXVlhoV2JFNVVZbFpHTlZaSGRITlpWMVowVld0YVYxWnRUVEZaYlhoUFZteFNjbE50Ums1U00yaEdWbFpqZUdReVJsWk5XRlpvVWtWd1lWUlhOVU5OYkdSeFVXNU9UMkpJUVRKV1YzaERWVEZPUms1V1FsWldSWEI2VlZkNGRtUXlTa1pWYkVwb1lsaG9SMVpzV21wT1YwcHpWR3hhVm1Gck5YSlpiRlY0VG14YVdHTkdaR2hXYTJ3MFZteG9TMVV4U25KWGFrcFZUVVpaZWxwV1pFZFRSMVpIWTBaa1RsWldXalZXVjNSaFVqSlNjazlWWkdsVFJrcFJWbXBPVTJNeFduSlZiRTVWVFZWV05WbHJWa3RaVlRGV1UydHNXbFpYVVRCV01uaGFaVVpPZFZSc2NFNWlXR2hGVjFaamVGTXhUa2RUYmxacVVqTkNjMWxYZEV0a01XUlhWbTEwVjAxcldraFpNRlp2VmpKS2RHVkZkRlppYmtKSFdrUkdVMUl4Vm5OVGJXaFhZVEJ3TVZaR1ZsZE5SazV6VWxoa1UySlVWbFZXYkZwS1RVWnNjVkZZYUZkU2Exb3dXVEJrYzFVd01VZGlla3BZVmtVMU1scEVTa2RYUms1ellVWlNXRkpyY0ZCWGJGcFhZMjFPYzFSc1dsZGlSVnBXVmpCYVMxTkdXa1pXV0doT1VtdHdXRmxWVlRGaE1VcFhWMnR3VjFKdGFGUlZha1poVW1zeFZWRnNUbFpsYlhoUVYydFdWMWxXVWxkVmJHeFdZVEZLVkZWc1VrWmtNVlp6Vm1wU1ZXSldTa2RXYlhCaFZsWmtSMU5yWkZaTlJsWTBWRlZhUzFZeFJuSk9WM1JUVm14c05WWnJXbTlWTVVwSFUydGFUbFpGU2xSV2ExVXhWREZ3Umxac1pGUldiRXBhVmxkMFlWZHRSalpTV0dSV1lrZE5lRlpITVZOU2JGcHlZa1pXV0ZKcmNFWldWM1JXWlVVeFIxTnNhR3BTVkZaeVZXeGFWMDFzV2tkaFJrNVRZWHBDTTFSV1VrTlZNVnAwWVVVNVlWSldXbEJWYkZwVFYxWldjbHBHWkZOV1JWWXpWbGQ0VGs1V1VuUlZhMXBZWWxSR1ZsWXdXa3RTTVZKeFVWaG9UbEpyV2xaVlYzUTBWVEZLY2xkcVNsaGhhMHA2Vld0YVIxZEdjRWRoUlRGT1VsUldNRmRXVWt0VGF6QjVWVmhzVDFZd1dsTlVWV1JxVFVaVmVXTkZkRlppVlhBeFZqSjBVMWxXU1hwVmF6RlZWa1UxY2xwR1dtdGpiRkp4VVd4Q1UxWjZhekZXYkZwcVRWVXhjMUpZYkZaaWEzQlZWRlJHZG1Wc2JIUmxTR1JUVWpBeE0xbHJXa2RWYXpGelUyNXNWbVZyV2xSVVZFcExZekpPUmxWdGFGZFdNMmhUVmxaU1MxVXlUbk5VV0d4VVlXczFjRmxyYUVOU1ZtUlhWbTVPVmxaclZqVldWelZMVmtVeFYxTlljRnBpV0dnelZXdGFjMVp0U2tkU2JFcE9Za1Z3TlZaVVNURmtNREI1VTI1T2FsSldTbTlWYTJSdlZFWlNXR1ZGWkd4V01VcDVWa2N4TUdGRk1VbFVhbHBoVWtWcmQxUldXbFpsVjFaR1kwWmFVMVpVVm5sWFZsSkRaRzFTZEZWWWJFOVdNRnBUVkZkMFZrMUdWWGxqUlhSV1lsVndNRll5ZEZOWlZrbDZWV3N4V0dKVVZuSmFSbHByWTJ4U2RHVkdVbGRoTUhCR1ZqSXdlRTFIVmtkWGJHaGFaV3hLVlZsWGRIZFZNV3cyVW10T1UxSnVRa2xhUlZZd1lXMUtkRlZxUmxkTmJsSlFXWHBCTlZKdFNYcGlSbHBYWld0YU0xWlhkRzloTWxKWFdraEtWV0pzU2xGVmJHTTFUbFphVjFremFFNWlSVlkxVmxjMVMxWkhTblZSV0hCYVlsaG9NMVZyWkVkU1YwWkdaRVUxYVZKV2IzbFhhMlF3VkRKRmVWSllaR3RTZWtaeVZGZHdWMkZHVmxWVGJGcFBVbXMxZDFwRldrOWhNa3BaV2tST1YxSXpVbEJaTUZwSFYwWndSbU5HU2s1U1ZsVjNWakZhVjFVeFNuTmlNMmhvVFRKNGMxVnFTbTlqVmxKVlVWaGtUMVpyTlZsVVZXaHZWR3hLV1dGR1dsZFNiVko2Vmxaa1IxWnNWbkZUYlhSb1RURktORmRyWXpGWlZsSkhXa1ZzV0dGcmNGWlZiWGhLWlZad1NHUkVVbGRXTVVveFZqSjBORmRHVGtkaU0yeFhVbFpaTUZSWE1WTmpiVlpHVGxkR2JHSlZNVFpYYkZwdlUyc3dkMDVJY0dsVFIxSlZWbXhTYjJWV1VYZGhSWFJwVWxoUk1sbFZhR0ZaVmxWNlZGUkNXbUZyV2xCVmJHUlRaRlprY21WSGRHbGlSemsxVmxod1ExWXlTbkpPVkZwaFVrWmFiMVpyWkU1bGJIQlhXWHBTVGsxRVVqWlphMUpMVkRKV2RGVlVSbUZXTTBKeFZGUktWMWRIVGpaVWF6bE9UVzVvTWxaVVJsZFZNREI1Vlc1U1UyRXhXbFJXVkU1VFVteGFWMWw2Vm1saVJUVlhWbGR3VDJFeVNsWlhhMnhYWWxSR2RsZFdXa3BsUm1SeFZteGFVMDFyTkhwV1dIQkRWVEZXZEZOWVpFOVdWa3B2V1cweGIyVldaRmRYYlRsWVlrYzVORmxVVG5OaVJrbDVZVWhHVlZaRlJqTlViRnBQVjBVeFZrOVhkR2xXV0VGNFZteGplR0l5UmtkWGFscFhZbXMxWVZSWE1UUlRNVTQyVVd4T1ZtSlZiRFZYYTFaM1ZXc3hSbGR1VmxkV1ZscHlWMVprVTJSR1VuVlZhelZUVFd4S2FGWnRjRUpOUjFGNFlrWmtXbVZzV25KV2JYUkxWbFpWZUdGSFJsUmlWVnBYVlRKd1ExZEhTa2hoUmxKYVlXdHdTMXBXV2xkV1YwcEdZMGRzYUUxSE9UVldNV2gzVkRGV2RGSnNXbWxTVjJoWVdXMTRZVmxXVWxWU2EzQk9WbTEwTTFkcldtRlZSbHBZWlVSQ1ZWWnNTa2haVmxwUFVqRk9kVnBHY0U1U01VcEpWMnhhYTFVeFNrWlBWbWhPVmpKNFQxUlZhRUprTVZwR1YyMTBWazFyV2tsV1YzUnZWVEZaZVdWR1NsaGlia0pFVmtWYVQxWnNVbkpUYlVaT1VqTm9SbFpXV210aE1VNXpVbGhrVTFaR1NsbFpWRXBUWld4U1dHUklUbFJTYkVveFZrZDRkMWRHU2xWV1ZFcFhWbFp3VUZWNlNsTlNNa3BKVVdzMVZGTkZTa3hYVm1SM1ZURlJlRkpZYkdsU1ZYQm9WRlZrTkZKV1ZsZGFSM1JVWWtWV00xVnRNREZXUmxwV1RsVk9XR0ZyU25wVmJHUlhVMVpTYzJOR1pFNVRSVW8yVmpGa01GUXhSWGxUYkdoVVYwaENWVlpyWkRSVE1XeDBaVVYwYTJKSGREVlVWbHByWVVaS2RWRnJaRnBoTWxGM1ZUSXhSMk5XY0VWVWJXeHBVMFZKZDFkc1dsTmlNVTEzVFZoU1UySnNTbGRWYkZVeFkyeHNjMkZGVG1sV01VWTFWR3hrUjJGc1dYaGhla0pXVFc1Q1RGbFZaRXRXYkZKeVUyeENVMkV3Y0ZkV1IzQlBZVEpTVjFwSVZsTmlSa3BSVld4ak5VNVdaRmRhU0dSWFVtdGFWbGxWV2tkV01VcElWVmh3V21KWWFETmFWVnByVWxkR1JtUkZOV2xXVm05NFYydGtNRlF5UlhsVGJHeFNZbGQ0Y2xSWGNGZGhSbXQ0Vm1wT1QxSnJOWGhWTWpGdllVZEtjMk5GVmxoaE1rNDBXa1JLVTJSV2NFbFdiR2hwWVRGd1ZsWkVRbGRrYlZaWFlrWm9hbEpXV25KYVZ6RTBWV3hzV0UxRVVrOVNiRXBHVlRKd1UyRkdTblJsUkVKWFlsUldVRlpXV25kT2JFWnlaVVpTVjFaVVZrUldNbkJEWXpGS1IxSnNhR0ZTV0VKVFZGVldZV1JXVlhoV2F6bFNZa2M1TkZWWGRHOWhWazVIVjI1R1ZrMUdjR0ZhUkVaUFZtMUdSMVJyT1ZkTlJGWktWbTE0VTJNeFRuUlRiazVVWW1zMWFGWnNaRzlWTVd4WFZtNU9WRkpzU2pGV1IzaDNWMFpLVlZaVVNsZFdWbkJRVlhwS1MxZEdUbGxqUmxKcFlrVndUMVp0Y0VKTlZURnpZa2hTVDFack5YTldha0p6VGxad1JWTnVUbFJpUld3MVdsVm9TMVpzU25KT1ZYaFZWbGRTU0ZVeFdrOWtSMVpIWTBaa1RsWllRazFXYWtvd1ZERk9jMkl6YkZSaWJFcFVXVzE0UzJGR1duSlZhMDVxVW01Q1IxZHJZelZpUmxwMVVXeHNWbUpVUlhkV2ExcGFaVVpLZFZGc1VsZFdNbWhOVjFkMGExUXhaRmRYYmxaU1lsaENjRlp0ZUhkbFZscFdXa2R3YTAxVk1UTlphMVpUVld4WmVWVnJkRlpXUlVwSVdXMTRUMVpzVW5KVGJFSlRWMGRSTVZac1l6RlJNa1Y1VW01R1ZtRjZiRk5VVnpFMFVURmtjVkZ1VGxOU2ExcFpWMnRXZDFWck1VWlhibFpYVmxaYWNsWlVTazlUUmxaMVVXeEthVmRGU25kV1YzQkRXVlUxYzJFemNHbE5NbEp2Vm1wQ2QxZFdWWGhoUms1VllsWmFWMWxVVGt0Vk1VcHlWMnBLV0dGclNucFZhMXBIVjBad1JtTkdTazVTVm5BeFZsUkdWMVF4Um5OaU0yUnBVbFpLVTFaclpHOWpSbFp4VVcxR2FsSnRVbnBYYTFKUFdWVXhXVkZxUWxWTlYyaDZWbFphVm1ReVRrbGlSbkJYWWxaS1ZWWkhkRmRqTWs1V1RsVlNhbVZyTlZCVVZFbzBUV3hTZFdOSGNHeFdhM0I0VjFod1QxUnRTa2RXV0hCVlltNUNURlp0Y3pGT2JHdDZZa1pPYUdKVk1UWldSbVEwVkdzd2QwNVVXbFJpUmxwWFZXeGFSMDB4VGpaUmJrNVdVbGhSTWxscmFFZGhNVlY2VkZSR1dHRnJjRmRaTW5NMVYwZE9TR1ZGZUd4aVdHZ3lWbTEwYWs1Rk5VZFZhMVpVWVd4S2IxVnRNVFJOUmxwMFRsVTVWbFp1UVRKVlYzUTBWa1phVms1VlRsaGhhMHA2Vld0YVIxZEdjRVpqUmtwT1VsWndNVlpVUmxkVU1VWnpZak5vVW1FeWFIQlZNRnBoWTFaVmQxZHNjR3ROVlRWWFdWVmFUMVF4V1hkT1ZXeFhZa1pLZWxVeU1VdGpNVTUxVkcxR1YxWXlhRlJYVmxwWFl6Rk9SMVZ1VmxWaVNFSlpWV3hTVmsxc1dsWlhhemxVVFd0d1dWVXhhSGRXUjBwelUyczFWMkZyUlhoVVYzaHpaRVUxVjFSdGVGZE5SM2N4VjJ0U1MyTXhUbk5UV0d4c1UwVndWMVZ0Y3pGVVJtdDVUVlZrV0ZKc1duaFdWM1IzWVVaYVZtSXphRmROVm5CeFdsVmtTMUl4Um5OVmJGSnBZVE5DZGxadGNFZFRhekZIVkd4b2FWSlZOWE5XYlRWRFYyeFdkR05GWkdoU2JWSkhXVEJvVDFkSFJYaFNXR1JYVWpOU1VGa3dXa2RYUm5CR1kwWktUbEpXY0RGV1ZFWlhWREZHYzJJemFGSmhNVXBSVm1wT1UySXhXWGRYYmtwcVlrVndTRlZ0TldGWlZURklaVVZXVmxadFVuSlZNbmhHWkRGS2RFNVdVbGRXYTJ0M1YxWlNTMUl4WkZkYVJtaGhVbTVDVDFsdE1XOWtiR1JaWTBVNVZXRjZiRmRaYTJoVFZHeFplV1ZGTlZkaE1WWTBXVEJhVjFOR2EzcGFSbEpPVWpOb1JsWldXbXRoTVU1elVsaGtVMkpVVmxWV2JGVXhVVEZrY1ZGdVRsTlNhMXBaVjJ0YVIxVXdNSGxoU0ZwWFRWZE9ORlpxU2s1a01rcEdZVVpvYVdKSVFuaFhWbVIzVVRKT1IySklUbUZTYlZKeldXeFZlRTVXVm5STlJFWmFWbTFTUjFSc1ZtOVhiRnAwVlZSQ1dtRXhXbnBaTVZVd1pXeHdTVlpzYUdsV2JIQmFWa1JDVjJSdFZsZGFSV3hYWWxSR1UxUlhlRXRsYkZKeFUydDBUazFyY0hwWk1HUTBZVEpXZEdGRmVGVldNMmgyVkZaYVJtUXhWbkZVYld4cFUwVktlbFpHV2xOaU1VMTNUVmhPYUZOSVFuSlpWRUV4WTJ4c2NsVnRjR3RpVmtZMVZHeGtSMWxXWkVobFJYUldWa1ZhZWxsdGN6VlNiVWw2WWtab1YwMXNTbE5XVmxKTFZUSk5kMDVJWkd4U1JUVndXV3RvUTJNeFVuTlZiVGxVVFVSR2VsbFZhSGRoTWtWM1RsaEtXbUV4U25KVmJHUlNaVlUxV0ZKdGFGZFdXRUpNVm14V1YxUXlSWGxUYTFaWVZrVTFjbFJYY0ZkaFJtUnpZVVp3VDFKck5YaFZNbmgzV1ZVd2VHTkZWbGhoTWs0MFZUSjRTMU5XY0VsV2JHaHBWbXhyZUZaVVJtRlJNVXBIWTBWb2EyVnJOVmRWTUdSVFRWWlplVTFXV214V1ZHeEhXV3BPYzFkR1RrZFhibEpXVmtWd1ZGbDZRVEJrTWtZMlUyeGFVMVpVUVhoWFdIQkhZekZrUjFSdVVteFNNbmhVVld0YVMxVkdWbFZUYms1U1lrYzVNMWxyVmxOVmJGbDVWV3QwVmxaRlNraFpiWGhQVm14U2NsTnRSazVTTTJoSFYyeFdiMUV5UmxoVGJrcFVWMGRvYUZWc1ZURlNSbEpXV2taa1dGWnJXakJhVlZwSFZtc3hTVkZxUWxoV2JIQnlWR3RrUzFKdFNrbFJiRXBwVjBWS2QxWlhjRU5aVlRWellUTndhVTB5VW05V2JUVkRUVVpSZUdGSVRtaFdiRmt5VlcwMVIxZHRSbkpoTTJoVlZsZFNVRnBGVlRWWFZsSnlZMGRvVjFaWVFYcFdha293VlcxUmVWSnNhRlJpUjJoWVdXMDFRMk5XVWxoa1IwWnJWbTFTZWxsVlZUVlZNREZ5VjJ4c1lWWlhVVEJWTWpGSFZteE9jVkpzYUZkaVZUUXdWMWQwWVZFeFdrZFVibFpXWWxWYVdWVnNVbFpOYkZsNFYyMTBhRTFyY0VsV1JtaHJWMGRLY2xOdVFsWmhhMXBZV1RCYVQxWnNjRVphUjJocFVqTlJNVlp0TURGaE1rVjRVMnRXVW1KclNsWlZibkJYVmtaU2NscEdUbE5TYXpWWlYydGtkMkZXV25OaWVrSllZVEZ3Y2xsNlNsZFdNazVIWVVaYVZrMHhTa2RXYkZwcVRsZEtjMVJzV2xWaE1IQm9WRlZrTkZKV1ZsZGFSM1JVWWtWd1NsZHJVa3RYUjBWNVZXNXdWVll6YUVSWmJYTjRVbTFTUm1OR1NrNVNWbkF4VmxSR1YxUXhSbk5pTTJScFVsWktVMVpyWkc5aFJsWnhVMnBPYkZack5WZFhhMVUxWVdzeFdHVkdjRmRTZWxZelZsWmFWbVF5VGtWUmJHaFhUVzVSZWxkc1pEQmpNazVXVGxWYVQxWldTbTlXYkZaaFpGWlZlRlpyT1ZKaVJ6a3pXV3RXVTFWc1dYbFZhM1JXVmtWS1NGbHRlRTlXYkZaeFZXMXdUbFl6YUZwV1ZFbDRUa2RHVjFKWVpGUmliRXBoV1Zkek1WTXhVWGhXYms1clZteGFlRlpYTVRCVk1WcDFVV3BPV0ZZelVuSldiVEZIVmpGR2NWTnNTazVpUlhBMlZrZDRhMU13TUhsVGJrNXFVak5vVUZaclpHOVVSbEpZWlVjNVRsSXhTbmxXUnpFd1lWWktTRlZyV21GU1JXdDRWMVphZDFaV1ZuSmpSbHBUVmxSV2VWZFhkRk5oTVdSWVZWaHNUMVl3V21oV01HUjZUVVpWZVdORmRGaFdNVXAzVkRGV1UxbFdTWHBaTTNCV1RWZFNjbFY2U2tkV2JGWnhWRzFzYVZORlNqTldWbHBUWWpGTmQwMVlUbWhUU0VKeVdWUkJNV05zYkhKVmJYUnJWakZHTlZSc1pFZFpWbVJJWTNwQ1ZrMXVRa3hXTVdST1pVWkdjbFZ0UmxObGExcE1WbGQ0YTJGck5VZFVia1pVWWxWYWIxbFdVbk5TVm1SeVdUTm9XR0pWTlRGWGEyaFhWMGRLVlZKcmJGVk5SbG95V2xaYWEyUkdjRWRTYkVwT1lrVnZkMVpxUm10TlIwcHpWR3hrVW1FeFNtaFZhazVxWld4YVZtRkhkR3RXYlZJd1ZteG9jMVZHU2xoUFZGWlhUVWRvV0Zsc1drWmxWbFoxVkdzNVRsSXpUalZXYkZaWFZHczFXRlJZYUdsU2JXaFZXV3hvYjJOR1ZuSlZiRTVWVFZWV05WbHJWa3RaVlRGSVpVVldWbFp0VW5KVk1uaEdaREZLZEU1V1VsZFdWRlpFVmpKd1EyTXhTbGhXYTJ4U1lsZDRjRmxVUW5OT1JtUnlWbXM1VWsxRVJrbFdiWGh6VlcxS1dXRkdTbGRXUlVveldrVmFjMVl4Y0VWVmJXeFRWak5vTTFaV1kzaGtNa1pYVTFoa1dHRnNjR0ZVVkVrMVRURnNWMWR1Wkd0U1ZHeGFXV3RrYzFadFZuSlhibWhZVmpOQ1MxUldWWGhUUmxKMVZXeENXRkpVVmt4WFZscFhVekpSZUZwSVNsWlhSMUp2Vm1wR1MxTnNiRlpWYTA1V1RXdHdXVnBWYUhkWFIwcEdUbFYwV0dGcmNFeGFSVnBMWkZaV2RGSnNaRk5TVlhBelZqSjBWMkl5U1hkTlZXUlVZbXhLY0ZVd1ZURmhSbHBWVVc1T2FXSkhVbGhYYTFVMVlVZEtTVkZzY0ZaV00wSkVWbFphVm1ReVNrVlNiVVpUVmpKb01sWkdWbGRqTWs1SFVtNVdhVkl3V2xsVmJGcHpUa1prVjFkdE9WUk5hM0JJV1RCV1YxUXhTbFZXYTFaYVZteGFTRmx0ZUU5V2JGSnlVMjFHVGxJemFFWldWbHByWVRGV1YxSnFXbWxUUlhCaFZtMHhiMWxXVGpaUmJFNVdZbFZzTlZkclZuZFZhekZHVjI1V1ZrMVdXbEJWVjNoMlpESktSbFp0ZUZOTk1VcDJWbXBDWVdNeVNuTmFSbFpVWVd4S2IxVnFRWGhPYkZwSFZXNU9WR0pWY0ZaVmJUVkRWbFpLYzFOck9WcFdiSEJFV1cxemVGSnRVa1pqUmtwT1VsWndNVlpVUmxkVU1VWnpZak5rYVZKV1NsTldha3BUVXpGV1ZWRnJaR2xpUmxwSFYydFNVMkZHU25SbFJFSlhZbFJXVUZVeWVFcGxSMDVGVTJ4d1RtSlVhM3BYVmxwclZURk9TRk5yYkZaaVZWcFhWRlZrTUdWV1VYZFdibHBzVm14YVdWcEZVa3RWYXpGelUyNXNWazF1UW5KVVZFcExZekpPUmxWdGJHaGlWMmhOVmtaa05GSXlVbGRXV0dSV1lXczFjRmxyYUVOU1ZteHpWVzA1VkUxRVJucFZiVFZYWVRKRmQwNVlTbHBXUlVsM1ZHMHhVbVZWTlZoU2JFcE9UVVJCZDFaVVNuZFRNVlowVTJ4c1dHRXhTbWhWYWs1VFZGWldjbUZIZEd0V2JWSjVWa2N4TkZaR1duSlRhMVpZWVRKUmQxWkZXbE5UVm5CSlZteG9hRTFFVlhoV1ZFWmhVVEZLUjJORmFHdFNXR2h6V1cweFUwMVdXWGxrUlRscFVsUnNSMWxxVG5OV2JGbzJWbXhLVmxaRmNGUlpNbmhPWlZkT1JWUnRiR2xUUlVwR1YxY3hkMkl4VFhkTldFNVRZbXhhV0ZWdWNHNU5SbHBHVld0MFQxSXdXa2haYTJoVFZqSktjazVXU2xoaWJrSkVWa1ZhVDFac1VuSlRiVVpPVWpOb1JsWldXbXRoTVU1elVsaGtVMkpVVmxWV2JGVXhVVEZrY1ZKclRsUlNNSEJLVm0weGQxWkdTbk5pUkU1V1RWWmFkbFpVUVRGWFJsSnlZVVprVjFJemFFeFhWM2hUVm0xV1IySklUbUZTV0ZKd1ZXcEJNV1F4VlhoYVIzUllZWHBHTVZsVll6VlhiVlp5VGxVNVZVMVdXbnBhUlZwclpGWmtkR05IYkZkU1ZXd3pWbXBHVTFOck5WaFZiR2hXWVRKNFZWbHRlSGRqUmxaVlVXNU9hV0pIZUZoWGExcExWVVphV0dWRVJsZFdlbFpFV1ZaYVdtVkdXblZSYkZKWFZqQXhORmRXVm10VE1XUkhWMnhXYVZKWVFuQlphMVozVFRGa1dHVkhkRmRpVlZwWFdXdFdjMVpIU2xsaFNFWlhUVVp3YUZwRVJuSmxWVEZYV2tkb1RsWlZjREZXUmxaWFRVWk9jMUpZWkZOaVZGWlZWbXhWTVZFeFpIRlJiazVUVW10YVZsbFZWWGhVYlVwR1kwUk9XR0V5VWpKVVZWcFRZMnhTZFZGc1NsZE5iRXBNVmxaU1ExSXlTbk5VYkZwVllUQndhRlJXVmt0VFZsVjVZMFZrYUUxVk5VaFZNbkJMVjIxS1dHVkZVbFZXVjFKWVZqRmFSMlJIVmtkU2JGcE9VMFZGZVZZeWRHRmhNVTE1Vld0b1UySkhlRmRXYWtvMFV6RldjVkZVUm14aVIxSllXVlZWTldKSFNrWlRiRlpXVFdwR2VsbFVSa3RPYkZaMFRsWm9WMlZzV2xWWGExcFhUa1prVjFKdVZtbFNNbWhZV2xkMFlXUnNaRlZUVkVacVlrYzVORmxyYUZkV2JVcHpWMnMxVjAxR1ZYZGFWVnByVjBVeFNXRkhjRk5OVlhCR1ZsUkdUMDFHWkhKTldGWm9VMGRTV1ZaclZuZE9iR1J4VVZob1YxSnJXbmhWVnpGdlZqSldjbGR1Y0ZaTlZscHhWR3hrVTFkR1RuSmlSMmhPWWxaS2FGWnRjRTlpTWxaelZHeGFZVkl3V25GVmFrSjNVMVphYzFwSGRHaGhla0kwVmpJMVExZHRTa2hWYm5CVlZsWndSRlZyVlRWWFIwcElaRVpvVTJFeWQzcFdNV1IzVTJzeFJtTXpaRlppUlhCd1ZGY3hVMU14VmxWUmEyUnBZa1phUjFaR1VsZGhWbGwzWWtSYVZrMXFWbFJXVmxwM1RteEdjbVZHV2xOV1ZFRjRWMVpTUzFJeFpGZGFSbEpyVWxaYVYxWnVjSE5WUmxaVlUyNU9VbUpIT1ROWmExWlRWV3hhU0dGSGFGWmhhMjk2V2xaYVQxWnNjRVpQVjNCT1ZqTm9ZVlpyWXpGa01WWlhWbGhrYWxKR1dsbFdiVEZPWlVac1ZWTnJjR3hXVkVaS1ZsY3hiMVl5Vm5KWGJscFhUVzVDVEZacVNsZGpiVXBKVW1zNVUxWkdXa1pXTWpWM1VURlNSMU5yWkZOaWJIQm9WRlZrTkZKV1ZsZGFSM1JVWWtWV00xVnRNREZXUmxwWFUxaHdXbFpXV1RCV2ExVjRVMFp3UjFOc1pFNVdXRUkxVmxSR1YyRnRWa2hWYmxKVllteEtXRlpxU2xOalZteHpWbTFHVGxadFVubFhXSEJYWVRGS1dHVkZiRnBoTW1oVVZqSjRXbVZXVm5WVWJIQk9UVzVvUlZkV1ZtdFRNbEpIVm14b1lWSXllRlJVVnpWdVpVWmtWMVZyT1ZWaVJ6azFWVzEwYjFZeVNuUmxSMmhYVmtWS1RGbHFSbkpsYlVwR1ZHMTBWMkpyU2xwV2JUQjRUVVpzVjFkWWFGTmlWRlpXVlcxemVFMHhUalpSYkU1V1lsVnNOVmRyVm5kVmF6RkdWMjVXVjFaV1drOVViR1JHWlZaS2MySkdhRlpOTVVwSFZteGFhazVXVVhoU1dHeHBVbFZ3YUZSVlpEUlNWbFpYVlcwNVdsWXdjRlpaYTFKTFdWWktXRlZzYUdGV2JGcDZWVEJhVTJSV1VuTmpSbWhUVmtaVmVWWnNWbUZVTVUxNVUyeG9WRmRIZUZGV2ExWkxZVVpaZDFadVRtcFNiRnBKVjFST2ExWkZNVWRUYkU1YVlXdHdjbFV5ZUVaa01VcDBUbFpTVjFaVVZrUldNbkJEWXpGS1dGWnJiR0ZTV0VKVlZXeFNVMDB4WkhOWGJYUlBVakJ3U0ZWWGVGTldSMHBaVVc1Q1ZWWjZWblpVVjNoeVpWZE9TVmR0Ums1V2Vtc3lWbFJKZUU1R2JGZFhhbHBXVmtVMVZWWnFTVFJsUm14WVRWVndiRlpVVmxaVk1qRnpZa1phVm1ORVRsaFdla0kwVlhwS1UyUkdXbkpWYkVwcFlYcFdkMVpHWkRCWlYwNXpXa2hPYUZKWVFsRlZiR2hyVG14V1YxUnFRbE5XYkZwWlZERmpNVlpHV2xaT1ZVNVlZV3RLZWxWcldrZFhSbkJHWTBaT1ZGSXlaRFpXYkZacll6RktXRlZZYkU5V01GcFRWRlZXVmsxR1ZYbGpSWFJXWWxVMVNWWXlkRk5aVmtsNlZXc3hWMkpIVW5GVWExcFBZMVpPYzFOdGJHaFdSM2hHVmpKMGEwMUdVa2RWYTJ4aFUwWmFXVmxVUVRGbGJGRjNWbTVhYkZac1dsbFViR2hEVlRGT1NGVnFSbGROYmxKUVdWZHpOVkp0U1hwaVJscFlVbFpaZVZaV1VrdFZNazV6Vkc1R1lWSkZOWEJaYTJoRFVsWmtWMVZ0T1ZSTlJFWjZWVzAxYzFsWFJYZE9XRXBhVmtWSmQxa3haRkpsVlRWWVVteEtUazFJUWt4V2JGWlhWREpGZVZKWVpHdFNNbmh5VkZkd1YyRkdWbFZUYTFwUFVtczFlRlV5ZUV0aFYwWlZZa1ZXV0dFeVVYZFdSVnBUVTFad1NWWnNhR2hOUkZaMlZsUkdZVkV4U2tkalJXaHJVbGhTY2xsdE1WTk5WbGw1WkVVNWEyRjZiRWRaYWs1elZteGtSazVZYUdGV1YxSjJWVEo0UzFOV2NFVlRiR2hYWWtWV00xWkVRbGROTWxaelVteFNhMUpXV2xkV2JuQnpaRlpWZUZack9WSmlSemswVlZkMFUxVkdXalpTYmtKVlZqTkNlVnBFUm10ak1rWkdZMFY0VGxKcmNGUlhWelYzWWpGU1ZrMVlTbXBTUlhCWldWUktiMlZXVGpaUmJFNVdZbFZ2TWxsVlZYaFViVXBZV2tST1dGWXphSEpVVkVKNlpESk9SVlpzY0U1aGJGcEhWbXhhYWs1V1VYaFNXR3hhVFRKU1ZWUldWbUZUVmxaMFRsZDBhR0pGV1RKV2JYQlhWMjFHY2s1V2FGVldWbkF6Vm10YWRtVlZOVlpOVjNoWFRVUlZNbFpVUmxkaGJWWklVMnRvVm1FeWFHOVZNRnAzWVVaVmQxWllaRTlXYkd3MldXdGtNRlpHU25KalJtaFhWbTFOZUZaR1drWmtNVXAxVm14a1YxWnNWWGhXYlhSaFdWWktSMk5GYUZaaE0yaFhWbXRXUzFSV1dYbGtSM1JYVFd0d1YxbHJWbk5XVjBwWllVaENXbUpHY0V4WmJGcHpZekZ3UjFwSGVHbFdWRVV4Vmxjd2QwMVdiRmRXV0d4aFUwZFNWbFJYTVU5Tk1WWTJVVzVPVTFKcldsbFhhMVozVlRBeGRXRkVRbFpOVmxwMlZYcEtTMU5HVW5OaVJtUnBWMGRvZUZaR1VrZFNNREZYWWtoT1lWSnRVazlWYWtKaFUxWlJlRnBFUWxSaVJYQkdWVlpTVjFaR1dsWk9XRXBYVm14d1UxcFZXbE5qTVZweVpFZDRhVlpIZUZGV1ZsSkxZekZHYzJJelpHbFNWa3BUVm1wS1UxTXhWbFZSYTJScFlraENSMWRyWXpWaVJscDFVV3hzVm1KVVJYZFdNVlY0WkVkV1NWTnNVbGRXYTFsNlZqSndTMVF5VWtkWGJsWm9Vak5TV0ZSV1duWk5iR1J5Vm1zMVRsWXdjRmxWTVdoM1ZrZEtjMU5yTlZwaVIxSlVXWHBHZDFKc1VuUk9WMnhwVm10d1NsZFdWbTlqTVd4WFYxaGtXR0pyY0ZkVVZtUlRWVEZzZEdSRVFsWmhla1pIV2tWV2QxVnJNVVpYYmxaV1RWWmFVRlZYZUhaa01rcEdWV3hLYVdKRmNIZFhWbHBYVW1zMVYxUnNXbWhTV0ZKd1ZXcEJNVmRzV25STlZGSm9ZWHBDTkZWdGNFZFhSMHBWVVZSR1lWWnRVa3hXYTFVeFYwVTFXRkpzYUZOaE1XOTVWbFJLZDFNd01VaFVhMlJxVWxkNGFGUlhjRmRVVmxwWFZXdE9WVkpyTlZkV1IzUkxXVlV4U0dWRlZsWldiVkp5VlRKNFJtUXhUbGxhUm5CWFlsVTBNRmRYZEdGaWJWWllVMnRzVjJKWVVsUlVWbHAyVFZaa2Nsa3phRk5OYXpFeldXdFdWMVJzU1hsVmJUbFhZbTVDVjFwRVJrNWtNa1pHWkVkc1UwMUVWbUZXYlRCNFRrZEdjazFJYUZOaGExcFpXV3hTUWsxV2NGZGFSWFJYVWxSV1dWUnNaRWRYUmtweVYycEtWazF1UWxCV1ZFcFBVMFpPYzJGR1pGZGxiRnBPVm14U1MwMUdVWGhTV0d4YVRUSlNWVlJWWkRSU1ZsWlhXa2QwVkdKRlZqTlZiVEF4VmtaYVZrNVZVbFZXVjFKWVZURmFWMlJHWkhSU2JXeFhUVEpuTWxacVNqUlVNVVp5VDFaYWFWSlhlRlZaYkdodlkxWlpkMWR0Um1wTlYzY3lWa2Q0UzJFeFduVlJha0phWVRKb1VGZFdXbXRTYXpWWVlrWlNhR0Y2VmxWV1IzUnJWVEZLYzFwSVZsSmlWM2hVVkZaYVlVMVdXWGRYYTFwclRWVXhNMWxyVmxOVmJGbDVWV3QwVmxaRlNraFpiWGhQVm14U2NsUnRhRk5pV0ZFeFZtdGplRTVIUm5KTlNHUlBWbnBHYUZWc1pFNU5WbXQ1WlVoa1dGSlVWbHBaTUZaM1ZURktSbE51VmxoaE1WcDJXV3BCZUZJeGIzcGlSbWhwWVRCd2QxWlhjRWRXTURGWFlUTnNUbFp0VW05VmJUVkRVbFprY1ZSclRsVldNSEJZVlRJMVQxZEdXa1poZWtaYVZrVmFNMVpyV25abGJFWnlUVmRzYUdWc1ZqWldNV1F3WVRKTmQwMVZhRlJoTW1od1ZUQmFZV0ZHV1hkV1dHaHJZa1V4TkZWc2FHdFdSVEZIVTJ4T1dtRnJjSEpWTW5oR1pERktkRTVXVWxkV1ZGWkVWakp3UTJNeFRrWk5WbWhzVWpOQ1QxUlZVbGRrYkZsNVkwVjBWMDFzV25wWGFrNXpWMGRLY2xOdVFsWmhhMXBZV1cxNFYxSXhVbkpVYlhoWFltdEtZVlpYTVhkU01XeFhXa1ZhVDFOSFVsWlZibkJIWVVacmQxcEZkRlJTYkhBeFdUQmFiMkpHV1hoVFdHUlhUVzVvZGxaRVNsZGpNa3BIWVVkR1UwMHlhSGhXUmxaaFpESlJlR0pJU21GU2JIQndXV3RrYjFVeFVsWldha0pVWWtWV00xVnRNREZXUmxwV1RsVk9XR0ZyU25wVmExcEhaRlpXZEZKc2FGTldSbFY1Vm1wR1lXRXlSWGxUYTJoVllXeGFVMVpyWkRSVE1WWjFZMFZrYWsxWGR6SldSM00xWVVaS2RFOVVWbGRpVkZZelZqRlZlR015VGtsYVJuQm9UV3hLV0ZkcldtdFVNbEpIVjI1U2FGSXdXbE5VVnpGVFRURmFSbGt6YUZaTmEzQklXVlJPYzFWR1dYcFZiV2hYVmtWd2NscEVSbE5UUlRWV1QxZDBUbUV6UWtwWFYzUlRVVEpHVjFOWWJHeFNSVnBaV1d0a2IxUXhiSEZSYWtKV1lYcEdSMXBGVmxkV2JGbzJZa2hXVmsxV1dsQlZWM2gyWkRKS1JsVnNTbGROYkVwTVZsYzFkMVp0VmtkaVNFNVlWa1phYjFsc1ZuTk9WbEpYWVVaT1dsWnNiekpXYkdoclYyc3dlV1ZGVGxWTlZscDZWVEJrVjFOSFZraGlSMmhYVFcxa00xWnFTalJpTVZGNVZtNU9hVkp0YUdoVmFrNXZZMVp3VjFwRVFsVk5WVlkxV1d0V1MxbFZNVWhsUlZaV1ZtMVNjbFV5ZUVaa01VcDBUbFp3YVZJeFNrbFdSM1JoWW0xV2MxWnVWbGhpVjJoUFdXdGFkbVZHWkZWVWJrNVNZWHBzVjFsclZtOWlSa2w2WVVoQ1dsWnRVblpaYWtaclZsWk9jazlYYkZOTlJFVXlWbXRqZUZsWFJYaFRhbHBwVTBkNFdWbHJaRTVsUm5CWVpFUkNWbUY2UmtkYVJWWlhWbXhhTm1KSVZsWk5WbHBRVlZkNGRtUXlTa1pWYkVwWFRXeEtURlpVUWxkVE1ERnpZa1JhVldKRk5XaFpiRnBMVjJ4VmVVNVZPVlJpUlhCR1ZWY3dNVmRIU2xobFNFcGFZV3R3VkZVeFdsZGtWbkJJWTBkNGFWWkhkRFZXYTFaVFV6SkZlVlpzWkdsU2JYaFRXV3hTYzFSc2JITlhibVJwVFZkU1ZsVXllR3RoUmxsM1lrUldWVTFYYUV4V1JtUkxWbXMxVlZOc2NHbFNWRUY0Vmtaa2VtVkdXbGRpTTNCWFlYcFdVMXBYTVRCTk1WbDNWV3M1VGxKVVJrbFZiWFJ6VmtkS1dXRkhSbGRoYTFwTVdXeGFjMVl4Y0VkVWJFSlhWMGRqZUZZeFVrSk5Wa3BJVW14YVUySlVWbFZXYkZVeFVURmtjVkZ1VGxOU2ExcFpWMnRrYjFVd01VZGlSRTVYVFc1b2RsVjZTbGRqTVc5NllrVTVWMDF0YUhkV2JYQkhWakpLYzFaclpGVmhNRFZ5VldwQ2QyUldVbFpXYWtKVVlrVldNMVZ0TURGV1JscFdUbFZPV0dGclNucFZhMXBIWkZkT1NHTkdUazVXYmtJMlZtcEtNRlF4Um5KUFZscHBVbGQ0VjFsdGRFdGpSbHB4VW0xR2FWWnRlRmhYV0hCSFZHeEtkVkZzY0ZaTmJrSk1Wako0V21Wc2NFWlBWa3BPWWxVMGVsWlljRU5qTVVwSFVteG9ZVkpZUWxOVVZWWmhaRlpWZUZack9WSk5SRUkxVlcxMGIyRldUa1pPVjJoWFZrVktURlp0ZUhKbFZUVlhXa2RzVTFaSGVERldSbFpYVFVaT2MxSllaRk5pVkZaVlZteFZNVkV4WkhGUmJrNVRVbXRhV1ZkclZuZFZhekZHVjI1V1dHRXhXblpWZWtFeFZtczVXRTVWTlZOWFJrcE1WbFpTUTFJeVNuTlViRnBWWVRCd2FGUlZaRFJTVmxaWFdrZDBWR0pGVmpOVmJUQXhWa1phVms1VlRsaGhhMHA2VlRCYWEyUldaSFJqUjJoWFZsaENORll4WkhkVGJWWklWV3RrYWxKdGFGQldhMVpMVjJ4U1dFMVVVazVXYlZKNVYydGFhMVF4U2xobFJXeGFZVEpvV0ZVeWVFOVNiVTVJVDFad2FWWkZXbmxYVjNSWFRVWk9SazVXVmxOaVYzaFlXVmN4TkdWR1pGaGpSWEJzVWpGS1NGa3dXbTlVTVZwR1UyNUdZVlp0VWpaVVYzaExVakZLZFZkdFJrNVNNMmhHVmxaYWEyRXhUbk5TV0dSVFlsUldWVlpzVlRGUk1XUnhVVzVPVTFKcldsbFhhMVozVldzeFJsZHVWbFpOVmxwUVZWZDRkbVF5U2taaVJscHBZa2hDZGxaR1pEUlpWVEZYV2tWV1ZHSnJOWEpXYlRWRFUxWmFkR05HVGxSaVJYQkdWVmN3TVZkR1drWmhla1poVWxkU1RGWXdXbUZrVmxwMFpFWk9hR0pZWjNwV01XTjNaVVpWZVZOcmFGZGhNVXBUVm1wT2IxTXhWblZqUldScFRWaENWMVl4VWxkVWJFbDNZa1JXWVZKWFVUQlpWbVJMWTJzeFZrOVdTazVpV0doRVZqSndRMk14U2tkU2JHaGhVbGhDVTFSVlZtRmtWbFY0Vm1zNVVtSkhPVE5aYTFaVFZXeFplVlZyZEZaV1JVcElXVzE0VDFac1VuSlRiVVpPVmpOb1dsWnJZM2hrTVd4WFdrVmFUMVpHY0ZsVmExVXhWa1p3U0UxVldteFdiSEF4Vm0xMGQxVXhTa1pUYmxaWFRWWndjbFpFU2tkak1rNUhZa1pXYVdKclNtRldSbEpIVXpBeGMySkdWbFJpUjFKeVZtcEJlRTVHY0VaVmEwNW9WbFJHTVZaWE5VOVhiVXBaV1hwR1drMUhVa3hhUlZwWFpFZFdTR1ZHVG1oaE1IQlJWbFpTUzJGdFVYaFVXR1JwVWxaS1UxWnFTbE5UTVZaVlVXdGthV0pGTlZkV1IzUkxXVlV4U0dWRlZsWldiVkp5VlRKNFJtUXhTblJPVmxKWFZsUldSRll5Y0VOak1VcEhVbTVTYWxJeWVFOVpWM1JhWkRGWmVXVkhjRTVXVkVaSFdXdFdWMVJzU1hsVmJrSlhZV3RhYUZSdGVITk9iRTV5V2tkc2FWTkZTbUZXYTJONFV6RmtjazFZUm1sU1JVcGhXV3RrVTFkR2NFZGFSazVUVFVSc1dsVlhNWE5oVmxweVkwaHdXR0pHV21GYVJFcFRWMFpTV1dOR1dtbGlXR2gyVm1wQ1YxSXlVbk5VV0doVFYwZFNWVlJWV2t0Vk1XeHhVMjEwVkdKRlZqTlZiVEF4VmtaYVZrNVZUbGhoYTBwNlZXdGFSMWRHY0VaalJrcE9VbFp3TVZaVVJsZFVNVVp6WWpOa2FWSldTbE5XYWtwVFV6RlZkMVpyZEdsTlYzUTFWRlpXYTJFeFNuVlJiSEJYVm5wRk1GbFhNVXRqYXpGWVRsWmFVMkY2VmtWV1IzQkRaRzFXVjFOdVVtcFNia0pQV1d0YWRrMXNaRmxqUlZwUFZsUkdTVlV4YUhOaE1VbDZZVWhDV2xadFVrOVVWM2hQVm14d1JscEhhR2xTTTFFeFZtMHdNV1F5Um5KTlZsWm9UVEpTWVZsWGRIWmtNV3h5V2tWMGFsSXhSak5VYkZaVFlVWmFWbGR1VmxaTlZscFFWVmQ0ZG1ReVNrWlZiRXBYVFd4S1RGWldVa05TTWtwelZHeGFWV0V3Y0doVVZXUTBVbFpXVjFwSGRGUmlSVll6Vlcwd01WWkdXbFpPVlU1WVlXdEtlbFZyV2tkWFJuQkdZMFpLVGxKV2NERldWRVpYVkRGR2MySXpaR2xTVmtwVFZtNXdWMk5HV25GU2JVWlBZa2QzTWxVeWRHdGhWMHBKVVd4V1dGZElRbWhWTW5oS1pWZEdTRTlYUmxOV01VcFpWMnhhYTFSdFZrWlBWbXhYWWtoQ1dGcFhkR0ZsYkZWNFZtczViR0pIT1ROWk1GSlhWV3hhTmxacmRGWldSVFZRV1cxNGExWldUbFZXYlhSVFRVaENXbFp0TURGV01rVjRWR3RXVW1GNmJGTlVWekUwVVRGa2NWRnVUbE5TYTFwWlYydFdkMVZyTVVaWGJsWldUVlphVUZWWGVIWmtNa3BHVld4S1YwMXNTa3hXVmxKRFVqSktjMVJzV2xWaE1IQm9WRmR6TVUxR1duUk9XR1JvWWtWdk1sbHJVa2RYYlZaeVkwWmtXR0ZyV2tSV2ExcEhaRmRLU0ZKc2FGTldiWGN3Vm1wS05HSXhVWGROVldoVllXeGFVRll3WkZOalJsSlZVVlJDYTAxVk1UTlZiR2hyVmtVeFNHVkZWbFpXYlZKeVZUSjRSbVF4U25ST1ZsSlhWbFJXUkZZeWNFTmpNVXBIVW14b1lWSllRbE5VVlZaaFpGWlZlRlpyT1ZKaVJ6a3pXV3RXVTFWc1dYbFZhM1JXVmtWS1NGbHRlSEprTVd3MlZtMTRhVlpyY0VsV1JFWlRVakpHZEZOc2JHRlRTRUpWVm14a1UwMHhjRmhOVlhCc1ZsUldSbGxyWkhkVk1ERkhZbnBHVjAxV2NIRmFWV1JMVTBaV2NtRkdaR2xpV0doNFYyeGFiMkV5U25OaVJscGhVbTFTYjFWdE5VTlRWbHAwVGxoT2FHSldXbmhWYlRWaFYwZEtTRlZyYUZwV1JWb3pWakZhVDJSWFRrWmxSbHBYVWxWd1RsWlhkR0ZTTWxKellqTmthVkpXU2xOV2FrcFRVekZXVlZGclpHbGlSVFZYVmtkMFMxbFZNVWhsUlZaV1ZtMVNjbFV5ZUVaa01VcDBUbFpTVjFaVVZrUldNbkJEWXpGT1IxVnVSbE5pV0VKd1dWUk9RMlZzWkZoTlJFWldUVmhDTUZaWGRHOWhWazVIVTIxb1YxWkZTa2RVYkZwUFZtMUdSMVJ0Y0ZOTlNFSmFWbTE0YjFZeVJuSk5TR2hVWVd4YVdWbHNVbGRXUm10M1drVjBXRkpzY0ZsVU1WWjNZVVphVmxkdVpGWmxhMXBIV2tSR1RtUXlTa1pWYkVwWFRXeEtURlpXVWtOU01rcHpWR3hhVldFd2NHaFVWV1EwVWxaV1YxcEhkRlJpUlZZelZXMHdNVlpHV2xaT1ZVNVlZV3RLZWxWcldrZGtWa1owVW0xb1YxWlhPSGhXYWtvMFlqRlJlVlZZYkZSWFIzaFFWakJvUTJGR1dsbGpSbVJPWWtkNFdsa3dhR0ZXVjBWM1RsaGtWbFp0VW5KVk1uaEdaREZLZEU1V1VsZFdWRlpFVmpKd1EyTXhTa2RTYkdoaFVsaENVMVJWVm1Ga1ZsVjRWbXM1VW1KSE9UTlphMVpUVld4WmVWVnJkRlpXUlVwSVdXMTRUMVpzVW5ST1YyaFhWak5vTTFaSGVHcGxSMFpXVFVoa2FsSkZTbGxXYlRGdlZURnNjVkZzVGxaaVZXdzFWMnRXZDFWck1VWlhibFpXVFZaYVVGVlhlSFprTWtwR1ZXeEtWMDFzU2t4V1ZsSkRVakpLYzFSc1dsVmhNSEJvVkZWa05GSldWbGRhUjNSVVlrVldNMVZ0TURGV1JscFdUbFZPV0dGclNucFZhMXBIVjBad1IyTkZOV2hpV0dRelZqRmtOR0V4V1hsVmJHaFdZVEpTVVZZd1ZrdGpSbXh6VjJ0MGFrMVlRbGRXUjNSTFlXMUZlV1ZGV2xaaVIyaFFWVEo0VDFKc1RuRlRiSEJzWVhwV1ZWWXlNSGhWTVdSWFZHNVdWV0Y2UmxOVVZWWnpUVEZrV0dORmRFNVNNSEJKVlRJMVQxVkdaRVpUYmtKYVlrWndURmw2Um5kV2JGSnlVMjF3YUUxdWFFZFdWM2h2VkRGT2MxTlliR2hTZW14b1ZXeGtVMWRHY0ZkYVJUVnNVbFJzV2xadGVIZFdNbFp5VjI1d1ZrMVdXbEJhVjNoMlpESk9SVlpzU2xkbGJGcE1WbFpTVDFReVNuTmFSbFpVVmtaYWNsVnFRbmRYVmxwMFRsWmthRTFWVmpWYVJXaHJWVEZLY2xkcVNsaGhhMHA2Vld0YVIxZEdjRVpqUmtwT1VsWndNVlpVUmxkVU1VWnpZak5rYVZKV1NsTldha3BUVXpGV1ZWRnJaR2xpUlRWWFZrZDBTMWxWTVVobFJWWldWbTFTY2xVeWVFWmtNVXAxVjJ4U1YwMXVhRVJXTW5CTFZtMVdjazFWYUdsU1ZFWndWbTAxUW1WV1pGVlRXR1JzVWpCYVNWWlhkRk5oUmtsNlVXNUtWMDFHV2pOVWJGcHJZekZzTmxKck5WTmlWMUV5Vm14ak1WRXlSbGRYV0doWFltMVNWVlJXVmxkTk1WWTJVVzVPVTFKcldsbFhhMVozVldzeFJsZHVWbFpOVmxwUVZWZDRkbVF5U2taVmJFcFhUV3hLVEZaV1VrTlNNa3B6Vkd4YVZXRXdjR2hVVldRMFVsWldWMXBIZEZSaVJWWXpWVzB3TVZaRk1VWk9WWGhZVmtWd1RGa3dXazlYUm5CR1pVZG9WMVpXYTNoV1dIQkhVbTFSZUZSWVpHbFNWa3BUVm1wS1UxTXhWbFZSYTJScFlrVTFWMVpIZEV0WlZURklaVVZXVmxadFVuSlZNbmhHWkRGS2RFNVdVbGRXVkZaRVZqSndRMk14U2tkU2JsSnNVako0VlZWc1VsZGxiRnBGVTIxd2EwMVZNVE5aYTFaVFZXeFplVlZyZEZaV1JVcElXVzE0VDFac1VuSlRiVVpPVWpOb1JsWldXbXRoTVU1elVsaGtVMkpVVmxWV2JGVXhVVEZrY1ZGdVRsTlNhMXBaVjJ0V2QxVnJNVVpYYmxaV1pXdEtVRlV5TVVkV2JWWkpWV3hvYVdKSVFuaFhWM2hUVWpKSmVHTkZXbFZpVkZaV1dWUkJNV1F4VmxkYVIzUlVZa1ZXTTFWdE1ERldSbHBXVGxWT1dHRnJTbnBWYTFwSFYwWndSbU5HU2s1U1ZuQXhWbFJHVjFReFJuTmlNMlJwVWxaS1UxWnFTbE5UTVZaVlVXdGthV0pGTlZkV1IzUkxXVlV4U0dWRlZsWldla1l6V1ZaVmVHTldTbkZSYkdocFVqQXhORlpHVm1GaWJWWllVMnRzVjJKVldsUlVWbHB5WkRGVmVGWnJPV3hpUnprelZGWmFVMkV3TVhSVmJrWldZbTVDZWxSdGVIZFNiR1JWVm1zMVYwMUVWWGRYYTFKUFZERk9jMVJyWkZSaGEzQmhWbXRXZDFkR2NFZFhiVFZzVmpCd1NsWnRNVWRWTURGWFlUTmtWazFXV2xCYVYzaDJaREF4VjFWdGRFNWlWa3AyVmxkd1ExZHRVWGhhU0U1b1VsaFNjMWxyWkd0T1ZsSnpXa2M1YUZac2JEUldiVEF4VmtVd2VXVkZUbHBpV0ZKNlZXdGFjbVZXY0VabFIzaFhWbGhDTkZZeFpIZFRiVlpJVld0a2FsSnRhRkJXYTFaTFZGWmFWVk5xUWxWTlZWWTFXV3RXUzFsVk1VaGxSVlpXVm0xU2NsVXllRVprTVVwMFRsWlNWMVpVVmtSV01uQkRZekZLUjFKc2FHRlNXRUpUVkZWV1lXUldWWGhXYXpsU1lrYzVNMWxyVmxOVmJGbDVWV3QwVmxaRmNISlpNRnBQVm14U2NsTnRSazVpUmxreVZrWldhMk14VWxoVGJHUnFVa1Z3WVZSWGNFTk9SbXhXV2taT1UxSXdXa2xaTUdRd1YwWktXVkZVUmxkTmJtaHhWRlpWZUZJeGIzcGpSbHBwWVRCd2QxWnRjRWRXTWxGNFZGaG9VMWRIVWxWVVZXUTBVbFpXVjFwSGRGUmlSVll6Vlcwd01WWkdXbFpPVlU1WVlXdEtlbFZyV2tkWFJuQkdZMFpLVGxKV2NERldWRVpYVkRGR2MySXpaR2xTVmtwVFZtcEtVMU14VmxWUmEyUnBZa2QwTTFsVlZqQmhiRWwzWTBSR1YxWnRUVEZWTWpGTFUxZEdSVkpzVWxkTmJtaEVWMVJHVjJNeFNsZFViR3hTWVRGYVYxWnVjSE5rVmxWNFZtczVVbUpIT1ROWmExWlRWV3haZVZWcmRGWldSVXBJV1cxNFQxWnNVbkpUYlVaT1VqTm9SbFpXV210aE1VNXpVbGhrVTJKVVZsVldiR1J2VmtacmQxcEZkRmhTYkhCYVZtMHhkMVJ0U25SaFNIQlhUVzVvZGxWWE1VcGxWbEpaWTBaS2FWZEhhRzlXYlhCSFVqSlJlRk5yWkZOaWJIQm9WRlZrTkZKV1ZsZGFSM1JVWWtWV00xVnRNREZXUmxwV1RsVk9XR0ZyU25wVmExcEhaRWRXU0dWR1RrNVNSbG8yVmpGU1EySXhWbk5pTTJoVVlrZDRiMVZxVGtOaFJsbDNWbXR3YTAxWGVGaFhXSEJYWVRGYVdHVkZiRlppVkZZelZUSjRTbVZHV2xWVGJFNVRZVEZ2ZVZZeWNFTmpNVXBIVW14b1lWSllRbE5VVlZaaFpGWlZlRlpyT1ZKaVJ6a3pXV3RXVTFWc1dYbFZhM1JXVm14S1JGWkZXazlXYkZKeVUyMUdUbEl6YUVaV1ZscHJZVEZPYzFKWVpGTmlWRlpWVm14Vk1WRXhaSEZSYms1VFVtdGFXVmRyVm5kVmF6RkdWMjVXVmsxV1dsQlZWM2gyWkRKS1JsTnJOVk5YUmtwTVZsWlNRMUl5U25OVWJGcFZZVEJ3YUZSVlpEUlNWbFpYV2tkMFZHSkZWak5WYlRBeFZrWmFWazVWVGxoaGEwcDZWVEZhUjJSWFNraGhSbVJzWWtaWmVsWlljRU5oTVZwMFZHdGFWbUpGY0hCVVZ6RlRVekZXVlZGclpHbGlSVFZYVmtkMFMxbFZNVWhsUlZaV1ZtMVNjbFV5ZUVaa01VcDBUbFpTVjFaVVZrUldNbkJMVlRGT1NGTnJiRlppVlZwWFdsZDRXazFzWkZoa1IzUlhUV3R3U1ZaSGRGTlpWVEI2VVdzNVZsWkZiM2RXUkVaR1pWWnJlbHBHVWs1U00yaEdWbFphYTJFeFRuTlVhMXBxVTBVMWFGVnNaRzlYUm5CWFdrVjBhbEpyV2pGWmEyUkhWakF4Vm1ORVRsaFdSV3cwVm1wS1IyUkdWbkpWYldoVFVsWndlRmRYZUc5aU1rcFhXa2hTVGxKR1duTldiR2hUVWxaa2NtRkZUbWhXTUhCWVZUSTFUMWxXV2xaT1dFWmFUVVpaZDFaWGMzaFNiVkpHVm14YVdGSlZhM2xXYWtvMFlXc3hXRkpZYUdGTk1uaFBWbXBPYjJOV1VsVlJWRVpwVFZkU2VGVXllR3RpUjBWNlZXdFdXbFpGUlhoVmExcDNUbXhHY21WR2NGZGlWa3BvVmpKd1IySnRWa1pQVm14WFlraENXRnBYZEdGbGJGbDNWV3RhVDFKdE9UUlZWM2hYVkd4SmVWVnJlRlZXYkVwNldXeGFjMk14Y0VaYVIzQlRUVWhDTmxaRVJtdFpWazE1Vm01U1VGWlViRk5VVnpFMFVURmtjVkZ1VGxOU2Exb3dXVlZrZDFaR1NsWlhXR2hZVmtWcmVGWnFTbE5XYlZKR1lVZG9WRkp1UW5oV1JsSkhVbXMxVjFSdVZtcFNWWEJ5Vm14U1IxSldVbkpoUjNSVlZqQmFlVlZ0TlZkV1ZrcFdUbFZTWVZKRmNFdGFWM2hQWTFaR2MxSnNaRk5OYkVZMlZtdFNRMVV4Um5SVWExSlVWMFZLVFZaV1VYZFBWV3h3WVROQmFVdFRhejBpS1NrPSIpKQ=="))
